//display suffs (;
#include <SPI.h>
#include <RA8875.h>

#define RA8875_INT 4 
#define RA8875_CS 10 
#define RA8875_RESET 9

RA8875 tft = RA8875(RA8875_CS,RA8875_RESET);

//declaring all pins (const)
const int VRx = A0;
const int VRy = A1;
const int SW = A2;
const int VRx_1 = A3;
const int VRy_1 = A4;
const int SW_1 = A5;
const int sp = A6;

//decalaring all variables (that change)
int xPos = 0;
int yPos = 0;
int SW_state = 0;
int xPos_1 = 0;
int yPos_1 = 0;
int SW_state_1 = 0;

float ballx = 240;
float bally = 136;
float ballx_1 = 0;
float bally_1 = 0;
const float baseBallSpeed = 3.5;
const float ballSpeedUp = .1;
float ballSpeed = 5;
int directionx = 1;
int directiony = 1;

float paddleY = 240;
float paddleY_1 = 240;
float pastY = 240;
float pastY_1 = 240;
const int paddleX = 20;
const int paddleWidth = 8;
const int paddleHeight = 50;
float paddleSpeed = .015;

//joystick zero variables
int xRest = 512;
int yRest = 512;
int xRest_1 = 512;
int yRest_1 = 512;

void setup() {
  tft.begin(RA8875_480x272);
  tft.changeMode(GRAPHIC);
  tft.fillScreen(RA8875_BLACK);
  
  //start communication (to pc)
  Serial.begin(9600); 

  //set inputs
  pinMode(VRx, INPUT);
  pinMode(VRy, INPUT);
  pinMode(VRx_1, INPUT);
  pinMode(VRy_1, INPUT);
  pinMode(SW_1, INPUT_PULLUP);
  pinMode(SW, INPUT_PULLUP);
  pinMode(sp, OUTPUT);

  //zero joysticks
  xRest = analogRead(VRx);
  yRest = analogRead(VRy);
  xRest_1 = analogRead(VRx_1);
  yRest_1 = analogRead(VRy_1);
  ballReset();
}

void ballReset()
{
  ballx = 240;
  bally = 136;
  ballSpeed = baseBallSpeed;
  tft.fillCircle(ballx,bally,5,RA8875_WHITE);

  //delay(2000);
  directionx = random(0, 2);
  directiony = random(0, 2);

  Serial.print(directionx);
  Serial.print(", ");
  Serial.println(directiony);

  if(directionx == 0){
    directionx = -1;
  }
  if(directiony == 0){
    directiony = -1;
  }
}


void loop() {
  //reading all data from the pins
  //xPos = analogRead(VRx) - xRest;
  yPos = -1 * (analogRead(VRy) - yRest);
  SW_state = not digitalRead(SW);
  //xPos_1 = analogRead(VRx_1) - xRest_1;
  yPos_1 = analogRead(VRy_1) - yRest_1;
  SW_state_1 = not digitalRead(SW_1);

  //moving paddles according to the joysticks

  pastY = paddleY;
  pastY_1 = paddleY_1;
  paddleY += yPos * paddleSpeed;
  paddleY_1 += yPos_1 * paddleSpeed;

  //limiting the paddle 
  paddleY = constrain(paddleY, 0, 272 - paddleHeight);
  paddleY_1 = constrain(paddleY_1, 0, 272 - paddleHeight);
  
  /*
  //debug
  
  Serial.print("X: ");
  Serial.print(xPos);
  Serial.print(" | Y: ");
  Serial.print(yPos);
  Serial.print(" | Button: ");
  Serial.print(SW_state);
  Serial.print("       ");
  Serial.print("X: ");
  Serial.print(xPos_1);
  Serial.print(" | Y: ");
  Serial.print(yPos_1);
  Serial.print(" | Button: ");
  Serial.println(SW_state_1); 
  Serial.print(ballx);
  Serial.print(", ");
  Serial.println(bally);
  */

  ballx_1 = ballx; bally_1 = bally;
  if(SW_state || SW_state_1)
  {
    tone(sp, 1000);
  }
  else
  {
    noTone(sp);
  }
  ballx += directionx * ballSpeed;
  bally += directiony * ballSpeed;
  if(ballx <= 5 || ballx >= 475)
  {
    ballReset();
  }
  if(bally <= 5 || bally >= 267)
  {
    directiony *= -1;
    ballSpeed += ballSpeedUp;
    
  }
  if((ballx <= paddleX + paddleWidth + 5 && paddleY <= bally && bally <= paddleY + paddleHeight) || (ballx >= 480 - paddleX - paddleWidth && paddleY_1 <= bally && bally <= paddleY_1 + paddleHeight))
  {
    directionx *= -1;
    tone(sp, 1000, 5);
  }
  
  //display everything
  //tft.fillScreen(RA8875_BLACK);
  tft.fillCircle(ballx_1,bally_1,5,RA8875_BLACK);
  tft.fillCircle(ballx,bally,5,RA8875_WHITE);
  tft.fillRect(paddleX, pastY, paddleWidth, paddleHeight, RA8875_BLACK);
  tft.fillRect(paddleX, paddleY, paddleWidth, paddleHeight, RA8875_WHITE);
  tft.fillRect(480 - paddleX, pastY_1, paddleWidth, paddleHeight, RA8875_BLACK);
  tft.fillRect(480 - paddleX, paddleY_1, paddleWidth, paddleHeight, RA8875_WHITE);

  delay(30);
}
